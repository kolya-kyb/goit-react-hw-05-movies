{"version":3,"file":"static/js/766.57358dac.chunk.js","mappings":"0RAoCA,EA9BqB,WACnB,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGAEfJ,GAAW,GAFI,UAGIK,EAAAA,EAAAA,MAHJ,OAGTC,EAHS,OAKfR,GAAS,SAAAD,GAAK,wBAAQA,IAAR,OAAkBS,EAAKC,SAAvB,IALC,gDAOfL,EAAS,KAAMM,SAPA,yBASfR,GAAW,GATI,4EAAH,qDAYhBI,GACD,GAAE,KAGD,gCACGL,IAAW,SAACU,EAAA,EAAD,IACXR,IAAS,uBAAIA,KACd,SAACS,EAAA,EAAD,CAAUb,MAAOA,MAGtB,EC5BD,EAJiB,WACf,OAAO,SAAC,EAAD,GACR,C,iNCFKc,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAV,EAAgB,mCAAG,sGACPM,EAASK,IAAI,qBADN,uBACtBV,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAKhBW,EAAe,mCAAG,WAAMC,GAAN,yFACNP,EAASK,IAAT,iBAAuBE,IADjB,uBACrBZ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfa,EAAc,SAACC,EAASC,GACnC,MAAM,+BAAN,OAAsCA,EAAtC,YAAiDD,EAClD,EAEYE,EAAO,mCAAG,WAAMJ,GAAN,yFACEP,EAASK,IAAT,iBAAuBE,EAAvB,aADF,uBACbZ,EADa,EACbA,KADa,kBAEdA,GAFc,2CAAH,sDAKPiB,EAAe,mCAAG,WAAML,GAAN,yFACNP,EAASK,IAAT,iBAAuBE,EAAvB,aADM,uBACrBZ,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfkB,EAAe,mCAAG,WAAOC,EAAOC,GAAd,yFACNf,EAASK,IAAI,gBAAiB,CACnDF,OAAQ,CAAEW,MAAAA,EAAOC,KAAAA,KAFU,uBACrBpB,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,uD,sGCZfqB,EAAeC,EAAAA,GAAAA,GAAH,kFAMZC,EAAWD,EAAAA,GAAAA,GAAH,6U,mBCCrB,EArBiB,SAAC,GAAe,IAAb/B,EAAY,EAAZA,MACZiC,GAAWC,EAAAA,EAAAA,MACXC,EAAWnC,EAAMoC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,YAApB,OACzB,UAACR,EAAD,YACE,SAAC,KAAD,CAAMS,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMV,GAA1C,UACE,gBACEW,IACEJ,GACIlB,EAAAA,EAAAA,IAAYkB,EAAa,YACzB,8EAENK,IAAI,QAGR,yBAAMP,GAAgBC,MAXTF,EADU,IAgB3B,OAAO,SAACP,EAAD,UAAeK,GACvB,C","sources":["modules/FilmTrending/FilmTrending.jsx","pages/HomePage/HomePage.jsx","shared/Api/Api.js","shared/components/FilmList/FilmList.styled.jsx","shared/components/FilmList/FilmList.jsx"],"sourcesContent":["import { getTrendingFilms } from 'shared/Api/Api';\nimport { useState, useEffect } from 'react';\n\nimport FilmList from 'shared/components/FilmList/FilmList';\nimport Loader from 'modules/Loader/Loader';\n\nconst FilmTrending = () => {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchFilms = async () => {\n      try {\n        setLoading(true);\n        const data = await getTrendingFilms();\n\n        setItems(items => [...items, ...data.results]);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchFilms();\n  }, []);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error && <p>{error}</p>}\n      <FilmList items={items} />\n    </>\n  );\n};\n\nexport default FilmTrending;\n","import FilmTrending from 'modules/FilmTrending/FilmTrending';\n\nconst HomePage = () => {\n  return <FilmTrending />;\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '65bf756d8028470116d86303f5d05e74',\n  },\n});\n\nexport const getTrendingFilms = async () => {\n  const { data } = await instance.get('/trending/all/day');\n  return data;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}`);\n  return data;\n};\n\nexport const getImageUrl = (imgName, imgSize) => {\n  return ` https://image.tmdb.org/t/p/${imgSize}/${imgName}`;\n};\n\nexport const getCast = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}/reviews`);\n  return data;\n};\n\nexport const getSearchMovies = async (query, page) => {\n  const { data } = await instance.get('/search/movie', {\n    params: { query, page },\n  });\n  return data;\n};\n","import styled from 'styled-components';\n\n// export const FilmCardList = styled.ul`\n//   display: grid;\n//   max-width: calc(100vw vw - 48px);\n//   grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n//   gap: 16px;\n// `;\n\n// export const FilmCard = styled.li`\n//   width: 100%;\n//   height: 260px;\n//   object-fit: cover;\n//   transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n\n//   &:hover {\n//     transform: scale(1.03);\n//     cursor: zoom-in;\n//   }\n// `;\n\nexport const FilmCardList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -10px;\n`;\n\nexport const FilmCard = styled.li`\n  flex-basis: calc(25% - 20px);\n  margin: 0 10px 20px;\n  transition: transform 0.3s ease-out;\n  &:hover {\n    transform: translateY(-5px);\n  }\n\n  img {\n    display: block;\n    width: 100%;\n    height: auto;\n  }\n\n  div {\n    margin-top: 10px;\n    font-size: 1.2rem;\n    line-height: 1.5;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { Link, useLocation } from 'react-router-dom';\nimport { FilmCard, FilmCardList } from './FilmList.styled';\n\nimport { getImageUrl } from 'shared/Api/Api';\n\nconst FilmList = ({ items }) => {\n  const location = useLocation();\n  const elements = items.map(({ id, title, name, poster_path }) => (\n    <FilmCard key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img\n          src={\n            poster_path\n              ? getImageUrl(poster_path, 'original')\n              : 'https://dummyimage.com/640x480/2a2a2a/ffffff&text=Product+image+placeholder'\n          }\n          alt=\"\"\n        />\n      </Link>\n      <div>{title ? title : name}</div>\n    </FilmCard>\n  ));\n\n  return <FilmCardList>{elements}</FilmCardList>;\n};\n\nexport default FilmList;\n\nFilmList.propTypes = {\n  items: PropTypes.array.isRequired,\n};\n"],"names":["useState","items","setItems","loading","setLoading","error","setError","useEffect","fetchFilms","getTrendingFilms","data","results","message","Loader","FilmList","instance","axios","baseURL","params","api_key","get","getMovieDetails","movie_id","getImageUrl","imgName","imgSize","getCast","getMovieReviews","getSearchMovies","query","page","FilmCardList","styled","FilmCard","location","useLocation","elements","map","id","title","name","poster_path","to","state","from","src","alt"],"sourceRoot":""}
{"version":3,"file":"static/js/100.2b55cf75.chunk.js","mappings":"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","sources":["modules/BackLink/BackLink.styled.jsx","modules/BackLink/BackLink.jsx","pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx","shared/Api/Api.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  gap: 4px;\n  padding: 8px 0;\n  color: black;\n  text-decoration: none;\n  font-weight: 500;\n  text-transform: uppercase;\n\n  :hover {\n    color: orangered;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { HiArrowLeft } from 'react-icons/hi';\n\nimport { StyledLink } from './BackLink.styled';\n\nconst BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"24\" />\n      {children}\n    </StyledLink>\n  );\n};\nexport default BackLink;\n\nBackLink.propTypes = {\n  to: PropTypes.object.isRequired,\n  children: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const TitleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n\n  h2 {\n    font-size: 32px;\n    font-weight: bold;\n    margin-right: 10px;\n  }\n`;\nexport const MovieInfoWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n\n  margin-bottom: 20px;\n\n  img {\n    width: 300px;\n    height: 450px;\n    object-fit: cover;\n    margin-right: 20px;\n  }\n\n  p {\n    font-size: 16px;\n    line-height: 1.5;\n  }\n`;\n\nexport const GenresWrapper = styled.div`\n  margin-bottom: 20px;\n\n  ul {\n    display: flex;\n    list-style: none;\n    gap: 10px;\n    padding: 0;\n    margin: 0;\n\n    li {\n      font-size: 18px;\n      font-weight: 600;\n    }\n  }\n`;\n\nexport const AdditionalInfoWrapper = styled.div`\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n\n  h3 {\n    font-size: 24px;\n    margin-bottom: 20px;\n  }\n\n  ul {\n    display: flex;\n    list-style: none;\n    padding: 0;\n    margin: 0;\n    margin-bottom: 25px;\n\n    li {\n      margin-right: 20px;\n    }\n\n    a {\n      font-size: 16px;\n      color: #000;\n      text-decoration: none;\n\n      &:hover {\n        text-decoration: underline;\n      }\n    }\n  }\n`;\n","import { useParams, NavLink, Outlet, useLocation } from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\n\nimport { getMovieDetails, getImageUrl } from '../../shared/Api/Api';\n\nimport BackLink from 'modules/BackLink/BackLink';\nimport Loader from 'modules/Loader/Loader';\n\nimport {\n  Wrapper,\n  TitleWrapper,\n  MovieInfoWrapper,\n  GenresWrapper,\n  AdditionalInfoWrapper,\n} from './MovieDetailsPage.styled';\n\nconst MovieDetailsPage = () => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from || '/';\n\n  const [film, setFilm] = useState({});\n  const [img, setImg] = useState('');\n  const [error, setError] = useState(null);\n  const [genres, setGenres] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [dateRelease, setDateRelease] = useState(null);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchFilms = async () => {\n      try {\n        setLoading(true);\n        const data = await getMovieDetails(movieId);\n        setFilm(() => data);\n        setImg(() =>\n          data.poster_path\n            ? getImageUrl(data.poster_path, 'original')\n            : 'https://dummyimage.com/640x480/2a2a2a/ffffff&text=Product+image+placeholder'\n        );\n        setGenres(() => data.genres);\n        setDateRelease(() => {\n          const date = new Date(data.release_date);\n          return date.getFullYear();\n        });\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchFilms();\n  }, [movieId]);\n\n  const createListGenres = items => {\n    const elements = items.map(({ id, name }) => <li key={id}> {name}</li>);\n\n    return <ul>{elements}</ul>;\n  };\n  return (\n    <Wrapper>\n      {error && <p>{error}</p>}\n      {loading && <Loader />}\n      <BackLink to={backLinkHref}>Back</BackLink>\n      {Boolean(film) ? (\n        <>\n          <TitleWrapper>\n            <h2>\n              {film.title} {dateRelease}\n            </h2>\n          </TitleWrapper>\n\n          <p>User Score: {film.vote_average}</p>\n          <MovieInfoWrapper>\n            <img src={img} alt={film.title} width=\"100px\" />\n            <p>{film.overview}</p>\n          </MovieInfoWrapper>\n\n          <GenresWrapper> {createListGenres(genres)}</GenresWrapper>\n        </>\n      ) : (\n        <p>No result</p>\n      )}\n      <AdditionalInfoWrapper>\n        <h3>Additional information</h3>\n        <ul>\n          <li>\n            <NavLink\n              to={`/movies/${movieId}/cast`}\n              state={{ from: backLinkHref }}\n            >\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to={`/movies/${movieId}/reviews`}\n              state={{ from: backLinkHref }}\n            >\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n      </AdditionalInfoWrapper>\n    </Wrapper>\n  );\n};\n\nexport default MovieDetailsPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '65bf756d8028470116d86303f5d05e74',\n  },\n});\n\nexport const getTrendingFilms = async () => {\n  const { data } = await instance.get('/trending/all/day');\n  return data;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}`);\n  return data;\n};\n\nexport const getImageUrl = (imgName, imgSize) => {\n  return ` https://image.tmdb.org/t/p/${imgSize}/${imgName}`;\n};\n\nexport const getCast = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}/reviews`);\n  return data;\n};\n\nexport const getSearchMovies = async (query, page) => {\n  const { data } = await instance.get('/search/movie', {\n    params: { query, page },\n  });\n  return data;\n};\n"],"names":["StyledLink","styled","Link","to","children","size","Wrapper","TitleWrapper","MovieInfoWrapper","GenresWrapper","AdditionalInfoWrapper","backLinkHref","useLocation","state","from","useState","film","setFilm","img","setImg","error","setError","genres","setGenres","loading","setLoading","dateRelease","setDateRelease","movieId","useParams","useEffect","fetchFilms","getMovieDetails","data","poster_path","getImageUrl","Date","release_date","getFullYear","message","Loader","Boolean","title","vote_average","src","alt","width","overview","items","elements","map","id","name","createListGenres","Suspense","fallback","instance","axios","baseURL","params","api_key","getTrendingFilms","get","movie_id","imgName","imgSize","getCast","getMovieReviews","getSearchMovies","query","page"],"sourceRoot":""}
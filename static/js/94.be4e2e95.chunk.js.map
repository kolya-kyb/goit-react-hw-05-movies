{"version":3,"file":"static/js/94.be4e2e95.chunk.js","mappings":"iSAEaA,EAAYC,EAAAA,EAAAA,IAAH,6FAMTC,EAAYD,EAAAA,EAAAA,IAAH,kEAKTE,EAAaF,EAAAA,EAAAA,GAAH,mJASVG,EAAaH,EAAAA,EAAAA,GAAH,ya,SCoCvB,EA7CoB,WAClB,OAA8BI,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACA,GAA8BN,EAAAA,EAAAA,UAAS,MAAvC,eAAOO,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QA6BR,OA3BAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,sGAEjBR,GAAW,GAFM,UAGES,EAAAA,EAAAA,IAAgBJ,GAHlB,UAGXK,EAHW,QAITC,EAAYD,EAAZC,SACKC,OALI,uBAMfR,GAAW,GANI,0BASjBN,GAAW,kBACTa,EAAQE,KAAI,SAAAC,GACV,OACE,UAACnB,EAAD,YACE,uBAAImB,EAAKC,SADX,IACwBD,EAAKE,UADZF,EAAKG,GAIzB,GAPQ,IATM,kDAmBjBf,EAAS,KAAMC,SAnBE,yBAqBjBH,GAAW,GArBM,6EAAH,qDAwBlBQ,GACD,GAAE,CAACH,KAEF,UAACd,EAAD,WACGY,IAAW,SAACV,EAAD,yBACQ,IAAnBI,EAAQe,SAAgB,UAAClB,EAAD,eAAcG,KACtCI,IAAS,uBAAIA,IACbF,IAAW,SAACmB,EAAA,EAAD,MAGjB,C,iNCtDKC,E,QAAWC,EAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAIAC,EAAgB,mCAAG,sGACPL,EAASM,IAAI,qBADN,uBACtBf,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,qDAKhBgB,EAAe,mCAAG,WAAMC,GAAN,yFACNR,EAASM,IAAT,iBAAuBE,IADjB,uBACrBjB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfkB,EAAc,SAACC,EAASC,GACnC,MAAM,+BAAN,OAAsCA,EAAtC,YAAiDD,EAClD,EAEYE,EAAO,mCAAG,WAAMJ,GAAN,yFACER,EAASM,IAAT,iBAAuBE,EAAvB,aADF,uBACbjB,EADa,EACbA,KADa,kBAEdA,GAFc,2CAAH,sDAKPD,EAAe,mCAAG,WAAMkB,GAAN,yFACNR,EAASM,IAAT,iBAAuBE,EAAvB,aADM,uBACrBjB,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfsB,EAAe,mCAAG,WAAOC,EAAOC,GAAd,yFACNf,EAASM,IAAI,gBAAiB,CACnDH,OAAQ,CAAEW,MAAAA,EAAOC,KAAAA,KAFU,uBACrBxB,EADqB,EACrBA,KADqB,kBAItBA,GAJsB,2CAAH,uD","sources":["pages/ReviewsPage/ReviewsPage.styled.jsx","pages/ReviewsPage/ReviewsPage.jsx","shared/Api/Api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const NoComment = styled.div`\n  font-size: 24px;\n  font-weight: bold;\n`;\n\nexport const ReviewList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n\nexport const ReviewCard = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  width: 100%;\n  padding: 10px;\n  margin: 10px;\n  background-color: #f2f2f2;\n  border-radius: 10px;\n  box-shadow: 0 0 5px rgba(0, 0, 0, 0.3);\n  text-align: left;\n  font-size: 16px;\n  line-height: 1.5;\n  word-break: break-word;\n  overflow: hidden;\n\n  p {\n    font-weight: bold;\n    margin-bottom: 5px;\n  }\n`;\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nimport { getMovieReviews } from '../../shared/Api/Api';\nimport Loader from 'modules/Loader/Loader';\n\nimport {\n  Container,\n  ReviewCard,\n  ReviewList,\n  NoComment,\n} from './ReviewsPage.styled';\n\nconst ReviewsPage = () => {\n  const [reviews, setReviews] = useState([]);\n\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [message, setMessage] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        setLoading(true);\n        const data = await getMovieReviews(movieId);\n        const { results } = data;\n        if (!results.length) {\n          setMessage(true);\n          return;\n        }\n        setReviews(() =>\n          results.map(item => {\n            return (\n              <ReviewCard key={item.id}>\n                <p>{item.author}</p> {item.content}\n              </ReviewCard>\n            );\n          })\n        );\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n  return (\n    <Container>\n      {message && <NoComment>No comment</NoComment>}\n      {reviews.length !== 0 && <ReviewList> {reviews}</ReviewList>}\n      {error && <p>{error}</p>}\n      {loading && <Loader />}\n    </Container>\n  );\n};\n\nexport default ReviewsPage;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: '65bf756d8028470116d86303f5d05e74',\n  },\n});\n\nexport const getTrendingFilms = async () => {\n  const { data } = await instance.get('/trending/all/day');\n  return data;\n};\n\nexport const getMovieDetails = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}`);\n  return data;\n};\n\nexport const getImageUrl = (imgName, imgSize) => {\n  return ` https://image.tmdb.org/t/p/${imgSize}/${imgName}`;\n};\n\nexport const getCast = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}/credits`);\n  return data;\n};\n\nexport const getMovieReviews = async movie_id => {\n  const { data } = await instance.get(`/movie/${movie_id}/reviews`);\n  return data;\n};\n\nexport const getSearchMovies = async (query, page) => {\n  const { data } = await instance.get('/search/movie', {\n    params: { query, page },\n  });\n  return data;\n};\n"],"names":["Container","styled","NoComment","ReviewList","ReviewCard","useState","reviews","setReviews","loading","setLoading","error","setError","message","setMessage","movieId","useParams","useEffect","fetchReviews","getMovieReviews","data","results","length","map","item","author","content","id","Loader","instance","axios","baseURL","params","api_key","getTrendingFilms","get","getMovieDetails","movie_id","getImageUrl","imgName","imgSize","getCast","getSearchMovies","query","page"],"sourceRoot":""}